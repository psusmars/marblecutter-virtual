AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  marblecutter-virtual

  SAM Template for marblecutter-virtual

Parameters:
  DomainName:
    Type: String
    Description: Endpoint name
  AcmCertificateArn:
    Type: String
    Description: ACM Certificate ARN (must have been created in us-east-1)
    Default: ""

Globals:
  Api:
    # API Gateway regional endpoints
    EndpointConfiguration: REGIONAL

    # enable CORS; to make more specific, change the origin wildcard
    # to a particular domain name, e.g. "'www.example.com'"
    Cors:
      AllowMethods: "'*'"
      AllowHeaders: "'*'"
      AllowOrigin: "'*'"
    # Send/receive binary data through the APIs
    BinaryMediaTypes:
      # */* breaks on redeployes
      - "*~1*"
      - image~1*
      - application/octet-stream

Resources:
  # Lambda function
  MarblecutterVirtualFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Policies: AmazonS3ReadOnlyAccess
      Handler: virtual.lambda.handle
      Runtime: python3.6
      Environment:
        Variables:
          #AWS_REQUEST_PAYER: requester
          CPL_TMPDIR: /tmp
          GDAL_CACHEMAX: 75%
          GDAL_DATA: /var/task/rasterio/gdal_data
          GDAL_DISABLE_READDIR_ON_OPEN: TRUE
          GDAL_HTTP_MERGE_CONSECUTIVE_RANGES: YES
          # requires nghttp2 support
          GDAL_HTTP_VERSION: 2
          VSI_CACHE: TRUE
          VSI_CACHE_SIZE: 500000000
      Timeout: 15
      MemorySize: 1536
      Events:
        # API Gateway routes
      Events:
        ProxyApiGreedy:
          Properties:
            RestApiId: !Ref MarblecutterVirtualAPIDef
            Method: ANY
            Path: /{proxy+}
          Type: Api
        ProxyApiRoot:
          Properties:
            RestApiId: !Ref MarblecutterVirtualAPIDef
            Method: ANY
            Path: /
          Type: Api
  # The following two sections are a work around for the API Gateway not properly 
  # handling content, it should be allowed to do CONVERT_TO_BINARY
  # Resolution taken from: https://github.com/awslabs/serverless-application-model/issues/566
  # Waiting for https://github.com/awslabs/serverless-application-model/issues/553 to fix
  MarblecutterVirtualFunctionCatchAllPermissionProdMarblecutterVirtualAPIDef:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref MarblecutterVirtualFunction
      SourceArn: !Sub
        - arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/*/*
        - __Stage__: Prod
          __ApiId__: !Ref MarblecutterVirtualAPIDef
      Principal: apigateway.amazonaws.com
      Action: lambda:invokeFunction
  MarblecutterVirtualAPIDef:
    Properties:
      Name: marblecutter-virtual-api
      StageName: Prod
      BinaryMediaTypes:
        - '*~1*'
        - image~1*
        - application/octet-stream
      Cors:
        AllowHeaders: '''*'''
        AllowMethods: '''*'''
        AllowOrigin: '''*'''
      EndpointConfiguration: REGIONAL
      DefinitionBody:
        swagger: '2.0'
        schemes:
          - https
        paths:
          "/": {}
          "/{proxy+}":
            x-amazon-apigateway-any-method:
              x-amazon-apigateway-integration:
                type: aws_proxy
                uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${MarblecutterVirtualFunction.Arn}/invocations
                httpMethod: POST
                contentHandling: CONVERT_TO_BINARY
              responses: {}
    Type: AWS::Serverless::Api
  # CloudFront Distribution
  CFDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
            - !Ref DomainName
        Enabled: true
        Comment: marblecutter-virtual
        IPV6Enabled: true
        Origins:
          -
            Id: MarblecutterVirtualApi
            DomainName: !Sub "${MarblecutterVirtualAPIDef}.execute-api.${AWS::Region}.amazonaws.com"
            CustomOriginConfig:
              OriginProtocolPolicy: https-only
            OriginCustomHeaders:
                - HeaderName: X-Forwarded-Host
                  HeaderValue: !Ref DomainName
            OriginPath: !Sub "/${MarblecutterVirtualAPIDef.Stage}"
        DefaultCacheBehavior:
          TargetOriginId: MarblecutterVirtualApi
          ForwardedValues:
            QueryString: true
            Cookies:
              Forward: none
          ViewerProtocolPolicy: allow-all
        ViewerCertificate:
          AcmCertificateArn: !Ref AcmCertificateArn
          SslSupportMethod: sni-only

Outputs:
  MarblecutterVirtualApi:
    Description: "API Gateway endpoint URL for for marblecutter-virtual"
    Value: !Sub "https://${MarblecutterVirtualAPIDef}.execute-api.${AWS::Region}.amazonaws.com/${MarblecutterVirtualAPIDef.Stage}"

  MarblecutterVirtualFunction:
    Description: "marblecutter-virtual Lambda Function ARN"
    Value: !GetAtt MarblecutterVirtualFunction.Arn

  MarblecutterVirtualFunctionIamRole:
    Description: "Implicit IAM Role created for marblecutter-virtual"
    Value: !GetAtt MarblecutterVirtualFunctionRole.Arn

  CFDistribution: 
    Description: Cloudfront Distribution Domain Name
    Value: !GetAtt CFDistribution.DomainName